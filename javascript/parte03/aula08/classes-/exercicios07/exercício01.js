// üöÄ Exerc√≠cio 1: Crie uma classe de eletr√¥nicos


// Crie uma superclasse Device com os atributos:
// brand (marca)
// power (ligado ou desligado)
// Depois, crie uma subclasse Smartphone que herda de Device e tem um novo atributo model.

// Regras:
// No constructor da subclasse, use super() para herdar brand e power.
// Crie um m√©todo togglePower() na superclasse para ligar/desligar.
// Crie um m√©todo info() no Smartphone que imprime a marca, modelo e se est√° ligado.



// Superclasse: Dispositivo gen√©rico
class Device {
  constructor(brand, power) {
    this.brand = brand           // Marca do dispositivo
    this.power = power           // Estado: "ligado" ou "desligado"
  }

  // M√©todo para alternar o estado (ligar/desligar)
  togglePower() {
    // Alterna entre ligado/desligado
    this.power = this.power === "ligado" ? "desligado" : "ligado"
    console.log(`${this.brand} est√° agora ${this.power}`)
  }
}

// Subclasse: Smartphone herda de Device
class Smartphone extends Device {
  constructor(brand, power, model) {
    // Passa marca e estado para o constructor da superclasse
    super(brand, power)

    this.model = model // Novo atributo exclusivo do Smartphone
  }

  // M√©todo que mostra informa√ß√µes completas do smartphone
  info() {
    console.log(`Marca: ${this.brand}, Modelo: ${this.model}, Estado: ${this.power}`)
  }
}

// Criando um smartphone
const smartphone = new Smartphone("Samsung", "desligado", "Galaxy S21")

// Exibe informa√ß√µes
smartphone.info() // ‚Üí Marca: Samsung, Modelo: Galaxy S21, Estado: desligado

// Alterna o estado de ligado/desligado
smartphone.togglePower() // ‚Üí Samsung est√° agora ligado

// Mostra novamente as informa√ß√µes atualizadas
smartphone.info() // ‚Üí Marca: Samsung, Modelo: Galaxy S21, Estado: ligado
